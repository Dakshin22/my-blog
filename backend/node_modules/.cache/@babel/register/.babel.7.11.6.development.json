{
  "{\"sourceRoot\":\"C:\\\\Users\\\\drath\\\\OneDrive\\\\Documents\\\\Projects\\\\my-blog\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\drath\\\\OneDrive\\\\Documents\\\\Projects\\\\my-blog\\\\backend\",\"filename\":\"C:\\\\Users\\\\drath\\\\OneDrive\\\\Documents\\\\Projects\\\\my-blog\\\\backend\\\\src\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\drath\\\\OneDrive\\\\Documents\\\\Projects\\\\my-blog\\\\backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\drath\\OneDrive\\Documents\\Projects\\my-blog\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\drath\\OneDrive\\Documents\\Projects\\my-blog\\backend",
      "filename": "C:\\Users\\drath\\OneDrive\\Documents\\Projects\\my-blog\\backend\\src\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\drath\\OneDrive\\Documents\\Projects\\my-blog\\backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\drath\\OneDrive\\Documents\\Projects\\my-blog\\backend\\src\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\drath\\OneDrive\\Documents\\Projects\\my-blog\\backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\drath\\OneDrive\\Documents\\Projects\\my-blog\\backend\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\napp.get(\"/api/articles/:name\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var articleName, client, db, articleInfo;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            articleName = req.params.name;\n            _context.next = 4;\n            return _mongodb.MongoClient.connect(\"mongodb://localhost:27017\", {\n              useNewUrlParser: true\n            });\n\n          case 4:\n            client = _context.sent;\n            db = client.db(\"my-blog\");\n            _context.next = 8;\n            return db.collection(\"articles\").findOne({\n              name: articleName\n            });\n\n          case 8:\n            articleInfo = _context.sent;\n            res.status(200).json(articleInfo);\n            client.close();\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: \"Error connecting to db\",\n              error: _context.t0\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get(\"/hello\", function (req, res) {\n  return res.send(\"Hello!\");\n});\napp.get(\"/hello/:name\", function (req, res) {\n  return res.send(\"Hello \".concat(req.params.name, \", this works\"));\n});\napp.post(\"/hello\", function (req, res) {\n  return res.send(\"Hello \".concat(req.body.name, \"!\"));\n});\napp.post(\"/api/articles/:name/upvote\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var articleName, client, db, articleInfo, updatedArticleInfo;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            articleName = req.params.name;\n            _context2.next = 4;\n            return _mongodb.MongoClient.connect(\"mongodb://localhost:27017\", {\n              useNewUrlParser: true\n            });\n\n          case 4:\n            client = _context2.sent;\n            db = client.db(\"my-blog\");\n            _context2.next = 8;\n            return db.collection(\"articles\").findOne({\n              name: articleName\n            });\n\n          case 8:\n            articleInfo = _context2.sent;\n            _context2.next = 11;\n            return db.collection(\"articles\").updateOne({\n              name: articleName\n            }, {\n              $set: {\n                upvotes: articleInfo.upvotes + 1\n              }\n            });\n\n          case 11:\n            _context2.next = 13;\n            return db.collection(\"articles\").findOne({\n              name: articleName\n            });\n\n          case 13:\n            updatedArticleInfo = _context2.sent;\n            res.status(200).json(updatedArticleInfo);\n            client.close();\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(500).json({\n              message: \"Error connecting to db\",\n              error: _context2.t0\n            });\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 18]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post(\"/api/articles/:name/add-comment\", function (req, res) {\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  var articleName = req.params.name;\n  articlesInfo[articleName].comments.push({\n    username: username,\n    text: text\n  });\n  res.status(200).send(articlesInfo[articleName]);\n});\napp.listen(8000, function () {\n  return console.log(\"Listening on port 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsImdldCIsInJlcSIsInJlcyIsImFydGljbGVOYW1lIiwicGFyYW1zIiwibmFtZSIsIk1vbmdvQ2xpZW50IiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsImNsaWVudCIsImRiIiwiY29sbGVjdGlvbiIsImZpbmRPbmUiLCJhcnRpY2xlSW5mbyIsInN0YXR1cyIsImNsb3NlIiwibWVzc2FnZSIsImVycm9yIiwic2VuZCIsInBvc3QiLCJib2R5IiwidXBkYXRlT25lIiwiJHNldCIsInVwdm90ZXMiLCJ1cGRhdGVkQXJ0aWNsZUluZm8iLCJ1c2VybmFtZSIsInRleHQiLCJhcnRpY2xlc0luZm8iLCJjb21tZW50cyIsInB1c2giLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7Ozs7OztBQUNBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsdUJBQVdDLElBQVgsRUFBUjtBQUNBSCxHQUFHLENBQUNJLEdBQUosQ0FBUSxxQkFBUjtBQUFBLHFFQUErQixpQkFBT0MsR0FBUCxFQUFZQyxHQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRXJCQyxZQUFBQSxXQUZxQixHQUVQRixHQUFHLENBQUNHLE1BQUosQ0FBV0MsSUFGSjtBQUFBO0FBQUEsbUJBSU5DLHFCQUFZQyxPQUFaLENBQW9CLDJCQUFwQixFQUFpRDtBQUNwRUMsY0FBQUEsZUFBZSxFQUFFO0FBRG1ELGFBQWpELENBSk07O0FBQUE7QUFJckJDLFlBQUFBLE1BSnFCO0FBT3JCQyxZQUFBQSxFQVBxQixHQU9oQkQsTUFBTSxDQUFDQyxFQUFQLENBQVUsU0FBVixDQVBnQjtBQUFBO0FBQUEsbUJBUURBLEVBQUUsQ0FDekJDLFVBRHVCLENBQ1osVUFEWSxFQUV2QkMsT0FGdUIsQ0FFZjtBQUFF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QUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF2Qzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQTZCQXJCLEdBQUcsQ0FBQ3VCLElBQUosQ0FBUyxpQ0FBVCxFQUE0QyxVQUFDbEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxrQkFDN0JELEdBQUcsQ0FBQ21CLElBRHlCO0FBQUEsTUFDaERLLFFBRGdELGFBQ2hEQSxRQURnRDtBQUFBLE1BQ3RDQyxJQURzQyxhQUN0Q0EsSUFEc0M7QUFFeEQsTUFBTXZCLFdBQVcsR0FBR0YsR0FBRyxDQUFDRyxNQUFKLENBQVdDLElBQS9CO0FBRUFzQixFQUFBQSxZQUFZLENBQUN4QixXQUFELENBQVosQ0FBMEJ5QixRQUExQixDQUFtQ0MsSUFBbkMsQ0FBd0M7QUFBRUosSUFBQUEsUUFBUSxFQUFSQSxRQUFGO0FBQVlDLElBQUFBLElBQUksRUFBSkE7QUFBWixHQUF4QztBQUNBeEIsRUFBQUEsR0FBRyxDQUFDWSxNQUFKLENBQVcsR0FBWCxFQUFnQkksSUFBaEIsQ0FBcUJTLFlBQVksQ0FBQ3hCLFdBQUQsQ0FBakM7QUFDRCxDQU5EO0FBT0FQLEdBQUcsQ0FBQ2tDLE1BQUosQ0FBVyxJQUFYLEVBQWlCO0FBQUEsU0FBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksd0JBQVosQ0FBTjtBQUFBLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcZHJhdGhcXE9uZURyaXZlXFxEb2N1bWVudHNcXFByb2plY3RzXFxteS1ibG9nXFxiYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gXCJib2R5LXBhcnNlclwiO1xyXG5pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gXCJtb25nb2RiXCI7XHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC5nZXQoXCIvYXBpL2FydGljbGVzLzpuYW1lXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZTtcclxuXHJcbiAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KFwibW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxN1wiLCB7XHJcbiAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgIH0pO1xyXG4gICAgY29uc3QgZGIgPSBjbGllbnQuZGIoXCJteS1ibG9nXCIpO1xyXG4gICAgY29uc3QgYXJ0aWNsZUluZm8gPSBhd2FpdCBkYlxyXG4gICAgICAuY29sbGVjdGlvbihcImFydGljbGVzXCIpXHJcbiAgICAgIC5maW5kT25lKHsgbmFtZTogYXJ0aWNsZU5hbWUgfSk7XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihhcnRpY2xlSW5mbyk7XHJcblxyXG4gICAgY2xpZW50LmNsb3NlKCk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogXCJFcnJvciBjb25uZWN0aW5nIHRvIGRiXCIsIGVycm9yIH0pO1xyXG4gIH1cclxufSk7XHJcbmFwcC5nZXQoXCIvaGVsbG9cIiwgKHJlcSwgcmVzKSA9PiByZXMuc2VuZChcIkhlbGxvIVwiKSk7XHJcbmFwcC5nZXQoXCIvaGVsbG8vOm5hbWVcIiwgKHJlcSwgcmVzKSA9PlxyXG4gIHJlcy5zZW5kKGBIZWxsbyAke3JlcS5wYXJhbXMubmFtZX0sIHRoaXMgd29ya3NgKVxyXG4pO1xyXG5hcHAucG9zdChcIi9oZWxsb1wiLCAocmVxLCByZXMpID0+IHJlcy5zZW5kKGBIZWxsbyAke3JlcS5ib2R5Lm5hbWV9IWApKTtcclxuYXBwLnBvc3QoXCIvYXBpL2FydGljbGVzLzpuYW1lL3Vwdm90ZVwiLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgYXJ0aWNsZU5hbWUgPSByZXEucGFyYW1zLm5hbWU7XHJcbiAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBNb25nb0NsaWVudC5jb25uZWN0KFwibW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxN1wiLCB7XHJcbiAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgIH0pO1xyXG4gICAgY29uc3QgZGIgPSBjbGllbnQuZGIoXCJteS1ibG9nXCIpO1xyXG4gICAgY29uc3QgYXJ0aWNsZUluZm8gPSBhd2FpdCBkYlxyXG4gICAgICAuY29sbGVjdGlvbihcImFydGljbGVzXCIpXHJcbiAgICAgIC5maW5kT25lKHsgbmFtZTogYXJ0aWNsZU5hbWUgfSk7XHJcbiAgICBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiYXJ0aWNsZXNcIikudXBkYXRlT25lKFxyXG4gICAgICB7IG5hbWU6IGFydGljbGVOYW1lIH0sXHJcbiAgICAgIHtcclxuICAgICAgICAkc2V0OiB7XHJcbiAgICAgICAgICB1cHZvdGVzOiBhcnRpY2xlSW5mby51cHZvdGVzICsgMSxcclxuICAgICAgICB9LFxyXG4gICAgICB9XHJcbiAgICApO1xyXG4gICAgY29uc3QgdXBkYXRlZEFydGljbGVJbmZvID0gYXdhaXQgZGJcclxuICAgICAgLmNvbGxlY3Rpb24oXCJhcnRpY2xlc1wiKVxyXG4gICAgICAuZmluZE9uZSh7IG5hbWU6IGFydGljbGVOYW1lIH0pO1xyXG5cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHVwZGF0ZWRBcnRpY2xlSW5mbyk7XHJcbiAgICBjbGllbnQuY2xvc2UoKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBcIkVycm9yIGNvbm5lY3RpbmcgdG8gZGJcIiwgZXJyb3IgfSk7XHJcbiAgfVxyXG59KTtcclxuXHJcbmFwcC5wb3N0KFwiL2FwaS9hcnRpY2xlcy86bmFtZS9hZGQtY29tbWVudFwiLCAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCB7IHVzZXJuYW1lLCB0ZXh0IH0gPSByZXEuYm9keTtcclxuICBjb25zdCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZTtcclxuXHJcbiAgYXJ0aWNsZXNJbmZvW2FydGljbGVOYW1lXS5jb21tZW50cy5wdXNoKHsgdXNlcm5hbWUsIHRleHQgfSk7XHJcbiAgcmVzLnN0YXR1cygyMDApLnNlbmQoYXJ0aWNsZXNJbmZvW2FydGljbGVOYW1lXSk7XHJcbn0pO1xyXG5hcHAubGlzdGVuKDgwMDAsICgpID0+IGNvbnNvbGUubG9nKFwiTGlzdGVuaW5nIG9uIHBvcnQgODAwMFwiKSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "articleName",
        "params",
        "name",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "client",
        "db",
        "collection",
        "findOne",
        "articleInfo",
        "status",
        "close",
        "message",
        "error",
        "send",
        "post",
        "body",
        "updateOne",
        "$set",
        "upvotes",
        "updatedArticleInfo",
        "username",
        "text",
        "articlesInfo",
        "comments",
        "push",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;;;;;AACA,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACI,GAAJ,CAAQ,qBAAR;AAAA,qEAA+B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErBC,YAAAA,WAFqB,GAEPF,GAAG,CAACG,MAAJ,CAAWC,IAFJ;AAAA;AAAA,mBAINC,qBAAYC,OAAZ,CAAoB,2BAApB,EAAiD;AACpEC,cAAAA,eAAe,EAAE;AADmD,aAAjD,CAJM;;AAAA;AAIrBC,YAAAA,MAJqB;AAOrBC,YAAAA,EAPqB,GAOhBD,MAAM,CAACC,EAAP,CAAU,SAAV,CAPgB;AAAA;AAAA,mBAQDA,EAAE,CACzBC,UADuB,CACZ,UADY,EAEvBC,OAFuB,CAEf;AAAEP,cAAAA,IAAI,EAAEF;AAAR,aAFe,CARC;;AAAA;AAQrBU,YAAAA,WARqB;AAW3BX,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqBc,WAArB;AAEAJ,YAAAA,MAAM,CAACM,KAAP;AAb2B;AAAA;;AAAA;AAAA;AAAA;AAe3Bb,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqB;AAAEiB,cAAAA,OAAO,EAAE,wBAAX;AAAqCC,cAAAA,KAAK;AAA1C,aAArB;;AAf2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;AAkBArB,GAAG,CAACI,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACgB,IAAJ,CAAS,QAAT,CAAd;AAAA,CAAlB;AACAtB,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwB,UAACC,GAAD,EAAMC,GAAN;AAAA,SACtBA,GAAG,CAACgB,IAAJ,iBAAkBjB,GAAG,CAACG,MAAJ,CAAWC,IAA7B,kBADsB;AAAA,CAAxB;AAGAT,GAAG,CAACuB,IAAJ,CAAS,QAAT,EAAmB,UAAClB,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACgB,IAAJ,iBAAkBjB,GAAG,CAACmB,IAAJ,CAASf,IAA3B,OAAd;AAAA,CAAnB;AACAT,GAAG,CAACuB,IAAJ,CAAS,4BAAT;AAAA,sEAAuC,kBAAOlB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE7BC,YAAAA,WAF6B,GAEfF,GAAG,CAACG,MAAJ,CAAWC,IAFI;AAAA;AAAA,mBAGdC,qBAAYC,OAAZ,CAAoB,2BAApB,EAAiD;AACpEC,cAAAA,eAAe,EAAE;AADmD,aAAjD,CAHc;;AAAA;AAG7BC,YAAAA,MAH6B;AAM7BC,YAAAA,EAN6B,GAMxBD,MAAM,CAACC,EAAP,CAAU,SAAV,CANwB;AAAA;AAAA,mBAOTA,EAAE,CACzBC,UADuB,CACZ,UADY,EAEvBC,OAFuB,CAEf;AAAEP,cAAAA,IAAI,EAAEF;AAAR,aAFe,CAPS;;AAAA;AAO7BU,YAAAA,WAP6B;AAAA;AAAA,mBAU7BH,EAAE,CAACC,UAAH,CAAc,UAAd,EAA0BU,SAA1B,CACJ;AAAEhB,cAAAA,IAAI,EAAEF;AAAR,aADI,EAEJ;AACEmB,cAAAA,IAAI,EAAE;AACJC,gBAAAA,OAAO,EAAEV,WAAW,CAACU,OAAZ,GAAsB;AAD3B;AADR,aAFI,CAV6B;;AAAA;AAAA;AAAA,mBAkBFb,EAAE,CAChCC,UAD8B,CACnB,UADmB,EAE9BC,OAF8B,CAEtB;AAAEP,cAAAA,IAAI,EAAEF;AAAR,aAFsB,CAlBE;;AAAA;AAkB7BqB,YAAAA,kBAlB6B;AAsBnCtB,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqByB,kBAArB;AACAf,YAAAA,MAAM,CAACM,KAAP;AAvBmC;AAAA;;AAAA;AAAA;AAAA;AAyBnCb,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqB;AAAEiB,cAAAA,OAAO,EAAE,wBAAX;AAAqCC,cAAAA,KAAK;AAA1C,aAArB;;AAzBmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA;AA6BArB,GAAG,CAACuB,IAAJ,CAAS,iCAAT,EAA4C,UAAClB,GAAD,EAAMC,GAAN,EAAc;AAAA,kBAC7BD,GAAG,CAACmB,IADyB;AAAA,MAChDK,QADgD,aAChDA,QADgD;AAAA,MACtCC,IADsC,aACtCA,IADsC;AAExD,MAAMvB,WAAW,GAAGF,GAAG,CAACG,MAAJ,CAAWC,IAA/B;AAEAsB,EAAAA,YAAY,CAACxB,WAAD,CAAZ,CAA0ByB,QAA1B,CAAmCC,IAAnC,CAAwC;AAAEJ,IAAAA,QAAQ,EAARA,QAAF;AAAYC,IAAAA,IAAI,EAAJA;AAAZ,GAAxC;AACAxB,EAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBS,YAAY,CAACxB,WAAD,CAAjC;AACD,CAND;AAOAP,GAAG,CAACkC,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "C:\\Users\\drath\\OneDrive\\Documents\\Projects\\my-blog\\backend\\src\\",
      "sourcesContent": [
        "import express from \"express\";\r\nimport bodyParser from \"body-parser\";\r\nimport { MongoClient } from \"mongodb\";\r\nconst app = express();\r\napp.use(bodyParser.json());\r\napp.get(\"/api/articles/:name\", async (req, res) => {\r\n  try {\r\n    const articleName = req.params.name;\r\n\r\n    const client = await MongoClient.connect(\"mongodb://localhost:27017\", {\r\n      useNewUrlParser: true,\r\n    });\r\n    const db = client.db(\"my-blog\");\r\n    const articleInfo = await db\r\n      .collection(\"articles\")\r\n      .findOne({ name: articleName });\r\n    res.status(200).json(articleInfo);\r\n\r\n    client.close();\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Error connecting to db\", error });\r\n  }\r\n});\r\napp.get(\"/hello\", (req, res) => res.send(\"Hello!\"));\r\napp.get(\"/hello/:name\", (req, res) =>\r\n  res.send(`Hello ${req.params.name}, this works`)\r\n);\r\napp.post(\"/hello\", (req, res) => res.send(`Hello ${req.body.name}!`));\r\napp.post(\"/api/articles/:name/upvote\", async (req, res) => {\r\n  try {\r\n    const articleName = req.params.name;\r\n    const client = await MongoClient.connect(\"mongodb://localhost:27017\", {\r\n      useNewUrlParser: true,\r\n    });\r\n    const db = client.db(\"my-blog\");\r\n    const articleInfo = await db\r\n      .collection(\"articles\")\r\n      .findOne({ name: articleName });\r\n    await db.collection(\"articles\").updateOne(\r\n      { name: articleName },\r\n      {\r\n        $set: {\r\n          upvotes: articleInfo.upvotes + 1,\r\n        },\r\n      }\r\n    );\r\n    const updatedArticleInfo = await db\r\n      .collection(\"articles\")\r\n      .findOne({ name: articleName });\r\n\r\n    res.status(200).json(updatedArticleInfo);\r\n    client.close();\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Error connecting to db\", error });\r\n  }\r\n});\r\n\r\napp.post(\"/api/articles/:name/add-comment\", (req, res) => {\r\n  const { username, text } = req.body;\r\n  const articleName = req.params.name;\r\n\r\n  articlesInfo[articleName].comments.push({ username, text });\r\n  res.status(200).send(articlesInfo[articleName]);\r\n});\r\napp.listen(8000, () => console.log(\"Listening on port 8000\"));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1602473335130
  }
}